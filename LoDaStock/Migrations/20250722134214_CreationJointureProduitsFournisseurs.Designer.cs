// <auto-generated />
using System;
using LoDaStock.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LoDaStock.Migrations
{
    [DbContext(typeof(LoDaStockDbContext))]
    [Migration("20250722134214_CreationJointureProduitsFournisseurs")]
    partial class CreationJointureProduitsFournisseurs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LoDaStock.Models.Commande", b =>
                {
                    b.Property<int>("CommandeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CommandeID"));

                    b.Property<DateTime>("DateCommande")
                        .HasColumnType("datetime2");

                    b.Property<int>("FournisseurID")
                        .HasColumnType("int");

                    b.Property<int>("ProduitID")
                        .HasColumnType("int");

                    b.Property<int>("QuantiteCommandee")
                        .HasColumnType("int");

                    b.Property<int>("Statut")
                        .HasColumnType("int");

                    b.HasKey("CommandeID");

                    b.HasIndex("FournisseurID");

                    b.HasIndex("ProduitID");

                    b.ToTable("Commandes", (string)null);
                });

            modelBuilder.Entity("LoDaStock.Models.Fournisseur", b =>
                {
                    b.Property<int>("FournisseurID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FournisseurID"));

                    b.Property<string>("AdresseMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CoordonneesFournisseur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomFournisseur")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("statutFour")
                        .HasColumnType("bit");

                    b.HasKey("FournisseurID");

                    b.ToTable("Fournisseurs", (string)null);
                });

            modelBuilder.Entity("LoDaStock.Models.Produit", b =>
                {
                    b.Property<int>("ProduitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProduitID"));

                    b.Property<string>("Commentaire")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FournisseurID")
                        .HasColumnType("int");

                    b.Property<string>("NomProduit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantiteDisponible")
                        .HasColumnType("int");

                    b.HasKey("ProduitID");

                    b.HasIndex("FournisseurID");

                    b.ToTable("Produits", (string)null);
                });

            modelBuilder.Entity("LoDaStock.Models.ProduitFournisseur", b =>
                {
                    b.Property<int>("ProduitID")
                        .HasColumnType("int");

                    b.Property<int>("FournisseurID")
                        .HasColumnType("int");

                    b.HasKey("ProduitID", "FournisseurID");

                    b.HasIndex("FournisseurID");

                    b.ToTable("ProduitFournisseur", (string)null);
                });

            modelBuilder.Entity("LoDaStock.Models.SortieStock", b =>
                {
                    b.Property<int>("SortieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SortieID"));

                    b.Property<string>("Commentaire")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateSortie")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProduitID")
                        .HasColumnType("int");

                    b.Property<int>("QuantiteSortie")
                        .HasColumnType("int");

                    b.HasKey("SortieID");

                    b.HasIndex("ProduitID");

                    b.ToTable("SortiesStock", (string)null);
                });

            modelBuilder.Entity("LoDaStock.Models.Commande", b =>
                {
                    b.HasOne("LoDaStock.Models.Fournisseur", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("FournisseurID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoDaStock.Models.Produit", "Produit")
                        .WithMany()
                        .HasForeignKey("ProduitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fournisseur");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("LoDaStock.Models.Produit", b =>
                {
                    b.HasOne("LoDaStock.Models.Fournisseur", "Fournisseur")
                        .WithMany()
                        .HasForeignKey("FournisseurID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fournisseur");
                });

            modelBuilder.Entity("LoDaStock.Models.ProduitFournisseur", b =>
                {
                    b.HasOne("LoDaStock.Models.Fournisseur", "Fournisseur")
                        .WithMany("ProduitFournisseurs")
                        .HasForeignKey("FournisseurID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LoDaStock.Models.Produit", "Produit")
                        .WithMany("ProduitFournisseurs")
                        .HasForeignKey("ProduitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fournisseur");

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("LoDaStock.Models.SortieStock", b =>
                {
                    b.HasOne("LoDaStock.Models.Produit", "Produit")
                        .WithMany()
                        .HasForeignKey("ProduitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produit");
                });

            modelBuilder.Entity("LoDaStock.Models.Fournisseur", b =>
                {
                    b.Navigation("ProduitFournisseurs");
                });

            modelBuilder.Entity("LoDaStock.Models.Produit", b =>
                {
                    b.Navigation("ProduitFournisseurs");
                });
#pragma warning restore 612, 618
        }
    }
}
